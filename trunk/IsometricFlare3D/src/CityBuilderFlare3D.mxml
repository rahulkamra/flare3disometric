<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" backgroundAlpha="0" applicationComplete="application1_applicationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.electron.engine.debug.Stats;
			
			import flare.basic.Viewer3D;
			import flare.collisions.RayCollision;
			import flare.core.Lines3D;
			import flare.core.Mesh3D;
			import flare.core.Pivot3D;
			import flare.core.Surface3D;
			import flare.loaders.Flare3DLoader;
			import flare.primitives.Cube;
			import flare.system.Input3D;
			
			import game.IsometricController;
			import game.IsometricGame;
			import game.controller.DragManager;
			import game.entity.GridEntity;
			import game.pathfinding.Tile;
			import game.settings.GridEntityMapping;
			
			import mx.events.FlexEvent;
			
			private var test:game.IsometricGame;
			
			[Embed(source='Map.jpg')]
			public static var Map:Class;
			
			
			protected function application1_applicationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				stage.addChild( new Stats() );
				stage.frameRate  = 60;
				Input3D.enableEventPhase = false;
				test = new game.IsometricGame(stage);
				stage.addChild(test);
			}
			
			
			public var model:Pivot3D;
			private var mesh:Mesh3D;
			private var anim1:Flare3DLoader;
			
			private var gridEntity:GridEntity;
			
			public function addKitchenWoodHouse():void{
				
				gridEntity = new GridEntity(GridEntityMapping.KITCHEN_WOOD_HOUSE);
				IsometricGame.addObject(gridEntity);
				gridEntity.setPositionByGrid(0,0);
				DragManager.addDrag(gridEntity);
				
			}
			
			public function addMarketStall():void{
				
				gridEntity = new GridEntity(GridEntityMapping.MARKET_STALL);
				IsometricGame.addObject(gridEntity);
				gridEntity.setPositionByGrid(0,0);
				
				DragManager.addDrag(gridEntity);
				
			}
			
			public function addFeedMaker():void{
				
				gridEntity = new GridEntity(GridEntityMapping.FEED_MAKER);
				IsometricGame.addObject(gridEntity);
				gridEntity.setPositionByGrid(0,0);
				DragManager.addDrag(gridEntity);
				
			}
			
			
			
			protected function moveAvatar(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				IsometricGame.char.moveToATile(new Tile(9,9,true))
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Button x="33" y="322" label="KitchenWood" click="addKitchenWoodHouse()"/>
	<s:Button x="33" y="363" label="MarketStall" click="addMarketStall()"/>
	<s:Button x="33" y="396" label="FeedMaker" click="addFeedMaker()"/>
	<s:Button x="33" y="429" label="Move" click="moveAvatar(event)"/>
	<!--<s:Button x="850" y="539" label="Button" click="button1_clickHandler(event)"/>-->
</s:Application>
